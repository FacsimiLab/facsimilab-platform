name: Continuous Delivery

on:
  push:
    branches:
      - release
  pull_request:
    branches:
      - release
    types:
      - opened
      - ready_for_review
  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  pull-requests: read

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:

  commitlint:
    # condition: Execute IFF it is protected branch update, or a PR that is NOT in a draft state
    if: ${{ github.event_name != 'pull_request' || !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 100

      - uses: wagoid/commitlint-github-action@v6

  semantic-release:
    runs-on: ubuntu-latest

    steps:
      # Note: we need to checkout the repository at the workflow sha in case during the workflow
      # the branch was updated. To keep PSR working with the configured release branches,
      # we force a checkout of the desired release branch but at the workflow sha HEAD.
      - name: Setup | Checkout Repository at workflow sha
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.sha }}
          
      - name: Setup | Force correct release branch on workflow SHA
        run: |
          git checkout -B ${{ github.ref_name }}

      - name: Python Semantic Release
        id: semvar
        uses: pranavmishra90/semvar-docker@v0.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_email: "195262995+facsimilab-bot@users.noreply.github.com"
          ssh_private_signing_key: ${{ secrets.FACSIMILAB_BOT_SSHKEY }}
          ssh_public_signing_key: ${{ secrets.FACSIMILAB_BOT_SSH_PUBKEY }}
          vcs_release: "true"
          changelog: "true"
          commit: "true"
          tag: "true"
          push: "true"
          root_options: "-v"

      - name: Update main branch
        run: |
          git config --global user.email "195262995+facsimilab-bot@users.noreply.github.com"
          git config --global user.name "FacsimiLab [Bot]"
          git config --global user.signingkey "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAEjI+PVQQhQjLVRmB6NnDJhqXKaVjzcr4KG1vqMkd2m  FacsimiLab [Bot]"
          git config --global gpg.format ssh
          git config --global commit.gpgsign true
          git config --global tag.gpgSign true

          git checkout main
          git merge ${{ github.ref_name }} -m 'ci: merge release into main'
          git push origin main
          
      
      - name: Workflow Status
        run: |
          echo "## Python Semantic Release - GitHub Action" >> $GITHUB_STEP_SUMMARY
          echo ""  >> $GITHUB_STEP_SUMMARY
          echo "Version: ${{ steps.semvar.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          printf "Tags: \n$(git tag -l)" >> $GITHUB_STEP_SUMMARY
          echo "Released: ${{ steps.semvar.outputs.released }}" >> $GITHUB_STEP_SUMMARY
          echo ""  >> $GITHUB_STEP_SUMMARY
          cat changelog.md >> $GITHUB_STEP_SUMMARY
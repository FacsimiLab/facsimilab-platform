name: Conda Package Update Checker

##-------------------------------------------------------------------##
# Testing Locally

# act workflow_dispatch -W .github/workflows/update-py.yml  

##-------------------------------------------------------------------##

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'  # Every Monday at 00:00 UTC
  pull_request:
    paths:
      - docker/main/python-env/environment.yml
      - docker/full/python-env/environment.yml

jobs:
  update-base:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "platform/docker/full/python-env/environment.yml"

      - name: Install conda-lock
        env:
          UV_SYSTEM_PYTHON: 0
        run: |
          uv pip install -q conda-lock

      - name: Strip version pins from environment.yml
        id: strip
        run: |
          python3 <<EOF
          import yaml

          with open("docker/main/python-env/environment.yml") as f:
              env = yaml.safe_load(f)

          stripped_deps = []
          for dep in env.get("dependencies", []):
              if isinstance(dep, str):
                  stripped_deps.append(dep.split('=')[0])
              elif isinstance(dep, dict) and "pip" in dep:
                  new_pip_deps = [pkg.split('=')[0] for pkg in dep["pip"]]
                  stripped_deps.append({"pip": new_pip_deps})

          new_env = {
              "name": env.get("name", "unpinned-env"),
              "channels": env.get("channels", []),
              "dependencies": stripped_deps
          }

          with open("unpinned-environment.yml", "w") as f:
              yaml.dump(new_env, f, sort_keys=False)
          EOF

      - name: Copy current base environment
        run: |
          cp docker/main/python-env/base-conda-lock.yml  base-current-lock.yml


      - name: Lock unpinned (latest) environment
        run: |
          conda-lock lock -f unpinned-environment.yml -p linux-64 --lockfile base-updated-lock.yml

      - name: Compare environments
        run: |
          python3 <<EOF
          import difflib

          file1 = "base-current-lock.yml"
          file2 = "base-updated-lock.yml"

          with open(file1, "r") as f1, open(file2, "r") as f2:
            diff = difflib.HtmlDiff().make_file(f1.readlines(), 
          f2.readlines(), fromdesc=file1, todesc=file2)

          with open("diff.html", "w") as html_file:
            html_file.write(diff)

          EOF

      - name: Workflow Summary (GitHub)
        if: ${{ github.actions == 'true'}}
        run: |
          echo "### Conda Update Check" >> $GITHUB_STEP_SUMMARY
          cat diff.html >> $GITHUB_STEP_SUMMARY

      - name: Upload artefacts
        if: ${{ github.actions == 'true'}}
        uses: actions/upload-artifact@v4
        with:
          name: base-updated-lock
          retention-days: 7
          path: |
            base-updated-lock.yml
            diff.html


      - name: Local workflow (Act)
        run: |
          touch github_step_summary.md
          export GITHUB_STEP_SUMMARY=github_step_summary.md
          echo "### Conda Update Check" >> github_step_summary.md
          cat diff.html >> $GITHUB_STEP_SUMMARY

          cat diff.html



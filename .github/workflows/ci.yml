name: Continuous Improvement

on:
  push:
    branches:
      - rc
      - main
  pull_request:
    branches:
      - release
      - rc
      - main
    types:
      - opened
      - assigned
      - labeled
      - ready_for_review
  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  pull-requests: read

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:

  semantic-release:
    runs-on: ubuntu-latest

    steps:
      # Note: we need to checkout the repository at the workflow sha in case during the workflow
      # the branch was updated. To keep PSR working with the configured release branches,
      # we force a checkout of the desired release branch but at the workflow sha HEAD.
      - name: Setup | Checkout Repository at workflow sha
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.sha }}
          fetch-tags: true
          ssh-key: ${{ secrets.FACSIMILAB_BOT_SSHKEY }}
          
      - name: Setup | Force correct release branch on workflow SHA
        run: |
          git checkout -B ${{ github.ref_name }}

      - name: Python Semantic Release (Main Branch)
        id: semvar-tag-main-branch
        if: ${{ github.ref_name == 'main' }}
        uses: pranavmishra90/semvar-docker@v0.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_email: "195262995+facsimilab-bot@users.noreply.github.com"
          ssh_private_signing_key: ${{ secrets.FACSIMILAB_BOT_SSHKEY }}
          ssh_public_signing_key: ${{ secrets.FACSIMILAB_BOT_SSH_PUBKEY }}
          build: "false"
          changelog: "true"
          commit: "true"
          tag: "true"
          vcs_release: "false"
          push: "false"
          root_options: "-v"


      - name: Python Semantic Release
        id: semvar-tag-rc
        if: ${{ github.ref_name == 'rc' }}
        uses: pranavmishra90/semvar-docker@v0.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_email: "195262995+facsimilab-bot@users.noreply.github.com"
          ssh_private_signing_key: ${{ secrets.FACSIMILAB_BOT_SSHKEY }}
          ssh_public_signing_key: ${{ secrets.FACSIMILAB_BOT_SSH_PUBKEY }}
          build: "false"
          changelog: "true"
          commit: "true"
          tag: "true"
          vcs_release: "false"
          push: "true"
          root_options: "-v"

      - name: Workflow Status
        run: |
          echo "## Python Semantic Release - GitHub Action" >> $GITHUB_STEP_SUMMARY
          echo ""  >> $GITHUB_STEP_SUMMARY
          echo "Version: ${{ steps.semvar-main-branch.outputs.version }} ${{ steps.semvar-tag-rc.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          printf "Tags: \n\n$(git tag -l)\n\n" >> $GITHUB_STEP_SUMMARY
          echo "Released: ${{ steps.semvar-main-branch.outputs.released }}" >> $GITHUB_STEP_SUMMARY
          echo ""  >> $GITHUB_STEP_SUMMARY
          cat CHANGELOG.md >> $GITHUB_STEP_SUMMARY

      - name: Update changelog branch
        run: |
          git config --global user.email "195262995+facsimilab-bot@users.noreply.github.com"
          git config --global user.name "FacsimiLab [Bot]"
          git config --global user.signingkey "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAEjI+PVQQhQjLVRmB6NnDJhqXKaVjzcr4KG1vqMkd2m  FacsimiLab [Bot]"
          git config --global gpg.format ssh
          git config --global commit.gpgsign true
          git config --global tag.gpgSign true

          CHANGELOG_FILE="CHANGELOG.md"
          TARGET_BRANCH="ci/changelog"
          COMMIT_MSG="ci: update changelog "

          git show-ref --verify --quiet refs/remotes/origin/$TARGET_BRANCH || git push origin origin/main:$TARGET_BRANCH

          git worktree add ../changelog-worktree $TARGET_BRANCH

          cp $CHANGELOG_FILE ../changelog-worktree/

          cd ../changelog-worktree

          echo $(ls -ah) >> $GITHUB_STEP_SUMMARY

          git add $CHANGELOG_FILE

          if git diff --quiet --cached; then
            echo "No CHANGELOG changes to commit." >> $GITHUB_STEP_SUMMARY
          else
            git commit -m "$COMMIT_MSG"
            git push origin $TARGET_BRANCH
          fi

          cd -
          git worktree remove ../changelog-worktree --force